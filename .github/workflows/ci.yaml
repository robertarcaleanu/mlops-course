name: CI Pipeline

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Ensure the workflow has permission to push commits
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}  # Dynamically set the branch name

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all branches so we can push back

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy==1.26.4 pytest==8.3.4 autopep8 isort pandas==2.0.3 joblib==1.4.2 boto3==1.36.26 black==25.1.0

      - name: Run tests
        run: |
          pytest online_inference_pipeline/tests/

      - name: Format Python code with black
        run: |
          black online_inference_pipeline/

      # Ensure we're on the correct branch and get the branch name
      - name: Checkout the correct branch if detached HEAD
        run: |
          if [ "$(git symbolic-ref --short HEAD)" == "HEAD" ]; then
            git checkout -b ${{ env.BRANCH_NAME }}  # Create and checkout the branch if detached
          fi
          echo "Current branch is $BRANCH_NAME"

      # Commit and push changes if there are any
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Format code with black"
            git push origin HEAD  # Push the current commit to the current branch
          else
            echo "No changes to commit."
          fi
