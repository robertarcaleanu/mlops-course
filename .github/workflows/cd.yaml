name: CD Pipeline

on:
  push:
    branches:
      - main # Trigger on push to the main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY: mlops_robert

    steps:
    
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up AWS CLI and Docker
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Log in to Amazon ECR
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    # Step 4: Build Docker Image
    - name: Build Docker image
      run: |
        docker build -t online_inference_lambda online_inference_pipeline/
      
    # Step 5: Tag the image for ECR
    - name: Tag Docker image
      run: |
        docker tag online_inference_lambda:latest ${secrets.AWS_ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest

    # Step 6: Push Docker Image to ECR
    - name: Push Docker image to ECR
      run: |
        docker push ${secrets.AWS_ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest

    # Step 7: Update Lambda function to use the new Docker image
    - name: Update Lambda function
      run: |
        aws lambda update-function-code \
          --function-name test-image \
          --image-uri ${secrets.AWS_ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest

    # Step 8: Output the success message
    - name: Success
      run: echo "Lambda function updated successfully!"
